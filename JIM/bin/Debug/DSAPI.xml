<?xml version="1.0"?>
<doc>
<assembly>
<name>
DSAPI
</name>
</assembly>
<members>
<member name="T:DSAPI.My.Resources.Resources">
<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.ResourceManager">
<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.Culture">
<summary>
  重写当前线程的 CurrentUICulture 属性
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.apiicon">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.dsencode">
<summary>
  查找 System.Byte[] 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.DSWEBAPIERRORCODE">
<summary>
  查找类似 0001:参数数量不匹配
0002:参数类型转换失败
0003:指定的API未开放
0004:发生了内部错误
0005:已限制该客户端类型对API的调用
0006:您的IP或IP段已在黑名单中
0007:已达到最大调用次数
0008:需要授权才可调用
0009:API库正在维护中，暂停访问
0010:此API要求传递参数才可调用
0011:当有传递某个参数名称时，所有参数均须带名称传递
0012:仅当数据类型为Byte数组或String类型时才可返回Base64文本
0013:仅当数据类型为Byte数组或String类型时才可返回文件下载类型
0014:仅当数据类型为Byte数组时才可返回图像类型
0015:身份或授权验证失败
0016:不能在一个DSWebAPI类中同时存在多个默认执行方法
0017:默认执行方法不应带有任何参数
0018:默认执行方法不应返回任何值
0019:循环执行的方法不应带有任何参数
0020:循环执行的方法不应返回任何值
0021:循环执行的参数不能叠加，优先级：毫秒间隔&gt;周期
0022:指定的方法未加入到循环执行列表
0033:调用频率 [字符串的其余部分被截断]&quot;; 的本地化字符串。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.dswebapiicon">
<summary>
  查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.DSWEBAPI编译文件头">
<summary>
  查找类似 Friend Class XXXX引导文件
    Private Shared _Url As String = &quot;http://127.0.0.1&quot;
    Private Shared _Enc As System.Text.Encoding = Text.Encoding.UTF8
    Private Shared _ResposeHeader As Net.WebHeaderCollection
    Public Class DS令牌
        Public Shared ReadOnly Property DS时效令牌 As DSAPI.DSWebAPI.令牌系统.DS时效令牌
            Get
                Return DSAPI.DSWebAPI.令牌系统.DS时效令牌.从Headers提取(_ResposeHeader)
            End Get
        End Property
    End Class
    Public Shared Property 编码 As System.Text.En [字符串的其余部分被截断]&quot;; 的本地化字符串。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.Shadow">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.webdata">
<summary>
  查找 System.Byte[] 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.字符转拼音">
<summary>
  查找 System.Byte[] 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.小盾牌">
<summary>
  查找 System.Drawing.Bitmap 类型的本地化资源。
</summary>
</member>
<member name="P:DSAPI.My.Resources.Resources.身份证地址代码对照">
<summary>
  查找类似 110000 北京市
110100 北京市市辖区
110101 北京市东城区
110102 北京市西城区
110103 北京市崇文区
110104 北京市宣武区
110105 北京市朝阳区
110106 北京市丰台区
110107 北京市石景山区
110108 北京市海淀区
110109 北京市门头沟区
110111 北京市房山区
110112 北京市通州区
110113 北京市顺义区
110200 北京市县
110221 北京市昌平县
110224 北京市大兴县
110226 北京市平谷县
110227 北京市怀柔县
110228 北京市密云县
110229 北京市延庆县
120000 天津市
120100 天津市市辖区
120101 天津市和平区
120102 天津市河东区
120103 天津市河西区
120104 天津市南开区
120105 天津市河北区
120106 天津市红桥区
120107 天津市塘沽区
120108 天津市汉沽区
120109 天津市大港区
120110 天津市东丽区
120111 天津市西青区
120112 天 [字符串的其余部分被截断]&quot;; 的本地化字符串。
</summary>
</member>
<member name="T:DSAPI.DSAPI信息">
 <summary>
 显示当前DSAPI.dll的信息
 </summary>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI文件路径">
 <summary>
 返回当前DSAPI.dll文件所在物理路径
 </summary>
 <returns>当前DSAPI.dll文件所在物理路径</returns>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI文件版本">
 <summary>
 返回当前DSAPI.dll文件版本号
 </summary>
 <returns>当前DSAPI.dll文件版本号</returns>
</member>
<member name="P:DSAPI.DSAPI信息.DSAPI年号">
 <summary>
 返回当前DSAPI.dll文件版本中的年号部分
 </summary>
 <returns>当前DSAPI.dll文件版本中的年号部分</returns>
</member>
<member name="P:DSAPI.DSAPI信息.作者">
 <summary>
 返回当前DSAPI.dll文件的开发作者名称
 </summary>
 <returns>当前DSAPI.dll文件的开发作者名称，固定为『DYLIKE』</returns>
</member>
<member name="P:DSAPI.DSAPI信息.QQ">
 <summary>
 返回当前DSAPI.dll文件的开发作者QQ号
 </summary>
 <returns>当前DSAPI.dll文件的开发作者QQ号</returns>
</member>
<member name="P:DSAPI.DSAPI信息.QQ群">
 <summary>
 返回DSAPI官方支持QQ群号数组
 </summary>
 <example>
 <code>
 Console.WriteLine(join(DSAPI信息.QQ群,",")
 '输出 419130936,780470675
 </code>
 </example>
 <returns>DSAPI官方支持QQ群号数组</returns>
</member>
<member name="M:DSAPI.DSAPI信息.导出所有函数到txt文件(System.String,DSAPI.DSAPI信息.分级符)">
 <summary>
 通过反射方式将当前DSAPI.dll文件的所有函数名称（包括分支）导出到文本文件
 <paramref name="保存到">指定要保存并生成的文本文档路径</paramref>
 <paramref name="分级符号">导出时是否使用分级符号，默认为Tab字符</paramref>
 </summary>
</member>
<member name="T:DSAPI.DSAPI信息.分级符">
 <summary>
 导出DSAPI函数列表到文本文件时使用的分级符号
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI">
 <summary>
 <b>详细文档请参考<a href="Http://www.dylikesoftcom/dswebapi">DSWEBAPI专栏</a></b>
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.启动服务(System.String)">
 <summary>
 监听指定网卡
 </summary>
<param name="指定网卡名称或IP地址">指定网卡名称或IP地址</param>
</member>
<member name="M:DSAPI.DSWebAPI.启动服务(System.Int32)">
 <summary>
 监听指定网卡
 </summary>
<param name="指定网卡索引">要监听的网卡序号</param>
</member>
<member name="P:DSAPI.DSWebAPI.WebAPI客户端.API名称">
 <summary>
 正在访问的API名称
 </summary>
</member>
<member name="P:DSAPI.DSWebAPI.当前客户端">
 <summary>
 获取正在请求该方法的WebAPI客户端，该属性不适用于默认执行的方法。
 </summary>
 <returns></returns>
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.作为分布式节点">
 <summary>                                                                                    
 暂未启用该项                                                                                 
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.从文本文件获取节点路径">
 <summary>
 指示该类应从指定的文本文件中获取节点路径
 <para>文本文件中对应格式：</para>
 <para>类名=节点路径</para>
 <para>例： Demo=v1/api</para>
 </summary>
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.节点路径">
 <summary>                                                                                    
 指示该类应替换成的路径(或别名)                                                               
 <para>例1，别名：测试节点</para>                                                             
 <para>例2路径：Ver1/Test</para>                                                              
 <para>节点路径访问时将忽略大小写</para>                                                      
 <para>注意：启用自定义节点路径（或别名）后，原类名（节点名）将不可用</para>                  
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.说明">
 <summary>                                                                                    
 对该类的描述                                                                                 
 </summary>                                                                                   
</member>
<member name="F:DSAPI.DSWebAPI.WebAPI.隐藏">
 <summary>                                                                                    
 指法该类是否出现在首页文档                                                                   
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.身份验证">
 <summary>
 以继承于DSWebAPI身份验证接口的类Type作为验证方式
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.身份验证.#ctor(System.Type)">
 <summary>
 以继承于DSWebAPI身份验证接口的类Type作为验证方式
 </summary>
 <param name="验证方式"></param>
</member>
<member name="T:DSAPI.DSWebAPI.免身份验证">
 <summary>
 即使在需要验证的类中也可以免去验证而直接访问
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.DS密法校验加密">
 <summary>
 对传入字符串参数及返回字符串进行DS密法加密，并追加校验码
 </summary>
</member>
<member name="T:DSAPI.DSWebAPI.默认执行">
 <summary>
 <para>当本类在DSWebAPI缓存中实例化后默认执行的方法，在同一个类中只允许有一个默认执行的方法且不带任何参数。<br/>
注意:该方法将不会公开也不允许客户端访问。
</para>
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.清理调用IP缓存列表">
 <summary>
 将所有API方法的IP统计缓存列表清空，但不清除调用次数
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.清理调用次数">
 <summary>
 将所有API方法的调用次数清零，但不清除调用IP缓存列表
 </summary>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.添加DS密钥(System.String)">
 <summary>
 添加一个密钥到DS密钥令牌缓存列表
 </summary>
 <param name="密钥"></param>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.删除DS密钥(System.String)">
 <summary>
 从DS密钥令牌缓存列表中删除指定的密钥
 </summary>
 <param name="密钥"></param>
</member>
<member name="M:DSAPI.DSWebAPI.令牌系统.清空DS密钥(System.String)">
 <summary>
 清空整个DS密钥令牌缓存列表中的所有密钥
 </summary>
 <param name="密钥"></param>
</member>
<member name="T:DSAPI.DSWebAPI.令牌系统.DS时效令牌">
 <summary>
 DSWebAPI专属时效令牌，该令牌在指定的时间及指定使用次数范围内有效
 </summary>
</member>
<member name="M:DSAPI.QQ用户相关.获取昵称(System.String)">
 <summary>
 获取指定<paramref name="QQ号"/>的昵称
 </summary>
 <example>
  <code>
  ‘获取QQ号为20353841的QQ昵称
  Dim NickName As String=获取昵称("20353841")
  MsgBox(NickName)
       </code></example>
 <param name="QQ号">必须至少5位长度的<see cref="T:System.String"/>类型,可转换为<see cref="T:DSAPI.QQ用户相关.QQ昵称和号码"/>类型
 </param>
 <exception cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">无互联网连接</exception>
 <returns>返回获取到的QQ昵称</returns>
 <remarks></remarks>
</member>
<member name="T:DSAPI.Win7特性.进度条状态">
 <summary>
 设置进度条相应的样式
 <note type="important">本功能不支持XP或更低版本的操作系统</note>
 </summary>
</member>
<member name="M:DSAPI.Win7特性.设置进度条状态(System.Windows.Forms.ProgressBar,DSAPI.Win7特性.进度条状态)">
 <summary>
 使ProgressBar控件应用相应的样式
 <note type="caution">本功能不支持XP或更低版本的操作系统</note> 
 </summary>
 <param name="进度条">要设置样式的ProgressBar控件</param>
 <param name="状态">要设置的进度条状态,如<b>正常</b>、<b>错误</b>、<b>暂停</b>等</param>
 <example>
 <para>将指定PrgressBar进度条控件设置为指定的样式</para>
 <para><img src="../CodesImages/进度条WIN7风格.gif"/></para>
 <para><a href="../Demos/DSAPI对Winform中Progressbar控件的WIN7风格样式控制.rar">下载本示例项目源码</a></para>
 <code language="vb" source="e:\codesdemo\进度条WIN7风格_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\进度条WIN7风格_cs.txt"></code>
 </example>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.初始化">
 <summary>
 在应用Windows7任务栏特效前，必须先初始化
 </summary>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.设置任务栏进度(System.Windows.Forms.Control,System.Int32,System.Int32)">
 <summary>
 <note type="important">窗体必须已经显示且已应用过<c>DSAPI.Win7特性.任务栏特效.初始化</c>
 <para>如在Form1_Shown中添加<c>DSAPI.Win7特性.任务栏特效.初始化</c></para>
 </note>
 在高于XP的操作系统中当前窗口所在任务栏按钮上显示指定进度的进度条
 </summary>
 <example>
 <para>设置"Form1"窗口对应的任务栏按钮显示50%的进度</para>
 <code> DSAPI.Win7特性.任务栏特效.设置任务栏进度(Form1, 50, 100)</code>
 </example>
 <param name="所属窗口">要设置任务栏进度的对应窗口</param>
 <param name="当前值">设置进度条最大值</param>
 <param name="最大值">设置进度条当前值</param>
</member>
<member name="M:DSAPI.Win7特性.任务栏特效.设置任务栏进度条状态(System.Windows.Forms.Control,DSAPI.Win7特性.任务栏特效.任务栏进度条状态)">
 <summary>
 <note type="important">窗体必须已经显示且已应用过<c>DSAPI.Win7特性.任务栏特效.初始化</c>
 <para>如在Form1_Shown中添加<c>DSAPI.Win7特性.任务栏特效.初始化</c></para>
 </note>
 在高于XP的操作系统中当前窗口所在任务栏按钮上设置已显示进度条的样式
 </summary>
 <example>
 <para>设置几种任务栏进度条样式样式</para>
 <img src="../CodesImages/DSAPI之任务栏进度条.png"/>
 <img src="../CodesImages/DSAPI之任务栏进度条2.gif"/>
 <code> DSAPI.Win7特性.任务栏特效.设置任务栏进度(Form1, 50, 100)</code>
 </example>
 <param name="所属窗口">要设置任务栏进度样式的对应窗口</param>
 <param name="状态">指示要显示何种进度条样式</param>
</member>
<member name="T:DSAPI.串口通讯">
 <summary>
 封装并简化一个串口通讯
 </summary>
<example>
<para>创建一个简单的DS串口通讯</para>
<para><img src="../CodesImages/DSAPI之串口通讯DEMO.png"></img></para>
<para><a href="../Demos/DSAPI之串口通讯DEMO.rar">下载本示例源码(VB.Net)</a></para>
<code source="E:\CodesDemo\串口通讯_vb.txt" language="vbnet"></code>
<code source="E:\CodesDemo\串口通讯_cs.txt" language="cs"></code>
 </example>
</member>
<member name="T:DSAPI.串口通讯.配置信息">
 <summary>
 对串口进行各项配置
 </summary>
</member>
<member name="P:DSAPI.串口通讯.配置信息.串口名称">
 <summary>
 指示当前已经打开的串口名称
 </summary>
 <returns></returns>
</member>
<member name="E:DSAPI.串口通讯.收到数据">
 <summary>
 当打开的串口接收到数据时触发此事件
 </summary>
 <param name="ComName">指示当前是哪个串口发来的数据</param>
 <param name="e">指示从串口接收到的数据</param>
</member>
<member name="E:DSAPI.串口通讯.串口打开失败">
 <summary>
 试图打开串口但不成功时触发
 </summary>
 <param name="ComName">试图打开的串口名称</param>
</member>
<member name="E:DSAPI.串口通讯.串口打开成功">
 <summary>
 指定串口打开成功后触发
 </summary>
 <param name="ComName">打开的串口名称</param>
</member>
<member name="E:DSAPI.串口通讯.串口被关闭">
 <summary>
 主动或被动关闭指定串口时触发
 </summary>
 <param name="ComName">串口名称</param>
</member>
<member name="M:DSAPI.串口通讯.显示串口属性配置窗口(System.Windows.Forms.Form,System.Boolean)">
 <summary>
 弹出一个窗口,内含当前设备串口列表,该窗口中属性可返回用户选定的串口名称
 </summary>
 <param name="宿主窗体">指定该弹出窗口将被作为哪个窗体的附属窗体</param>
 <param name="模式化窗体">是否以模式化显示该弹出窗口</param>
</member>
<member name="P:DSAPI.串口通讯.串口已经打开">
 <summary>
 返回当前类中指定的串口是否已经打开
 </summary>
 <returns>打开:True<para></para>关闭:False</returns>
</member>
<member name="P:DSAPI.串口通讯.串口对象">
 <summary>
 返回当前串口类中的SerialPort实体
 </summary>
 <returns>SerialPort实体</returns>
</member>
<member name="P:DSAPI.串口通讯.配置">
 <summary>
 串口相关配置信息
 </summary>
 <returns>配置信息</returns>
</member>
<member name="M:DSAPI.串口通讯.应用配置">
 <summary>
 使串口类应用当前设定的配置信息，<b>应用配置</b>在串口关闭或已打开时均可操作。
 </summary>
</member>
<member name="M:DSAPI.串口通讯.发送数据(System.Byte[])">
 <summary>
 向打开的串口发送数据,如果串口未打开则将自动跳过
 </summary>
 <param name="S1">要发送的数据</param>
</member>
<member name="M:DSAPI.串口通讯.关闭串口">
 <summary>
 关闭打开的串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.打开串口(System.String)">
 <summary>
 打开指定名称的串口，如<b>COM1</b>
 </summary>
 <param name="串口名称">要打开的串口名称，如<b>COM1</b></param>
</member>
<member name="T:DSAPI.串口通讯.发送模式">
 <summary>
 指示数据将以何种方式发送至串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.读取数据_String(System.String,System.Int32,System.Boolean)">
 <summary>
 向串口发送字符串数据并等待返回,编码随配置信息而定
 </summary>
 <param name="发送数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.Byte[],System.Int32,System.Boolean)">
 <summary>
 向串口发送字节数组并等待返回
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.String,DSAPI.串口通讯.发送模式,System.Int32,System.Boolean)">
 <summary>
  向串口发送字节数组并等待返回,编码随配置信息而定
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="模式">指示是按<b>ASC字符</b>模式发送还是<b>HEX16进制</b>模式发送</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns></returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_String(System.String,System.Boolean)">
 <summary>
 向串口发送字符串数据并等待返回,编码及超时时间随配置信息而定
 </summary>
 <param name="发送数据">要发送的字符串</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.Byte[],System.Boolean)">
 <summary>
  向串口发送字节数组并等待返回,超时时间随配置信息而定
 </summary>
 <param name="发送数据">要发送的字节数组</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns></returns>
</member>
<member name="M:DSAPI.串口通讯.读取数据_Bytes(System.String,DSAPI.串口通讯.发送模式,System.Boolean)">
 <summary>
 向串口发送字符串数据并等待返回,编码及超时时间随配置信息而定
 </summary>
 <param name="发送数据">要发送的字符串</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="T:DSAPI.串口通讯.附加功能">
 <summary>
 串口类中额外提供的功能
 </summary>
</member>
<member name="M:DSAPI.串口通讯.附加功能.十六进制字串转字节(System.String)">
 <summary>
 将一串以16进制表示的字符串转为了字节数组,如"AA BB CC"将被转换为Byte(){0xAA,0xBB,0xCC}"
 </summary>
 <param name="S">要被转换的以16进制表示的字符串,如"AA BB CC",建议以空格分割</param>
 <returns>返回转换后的字节数组</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.逆序(System.String,System.Boolean)">
 <summary>
 将一串以16进制表示的字符串以16进制方式反转顺序,如"A1 B2 C3"将被转换为"C3 B2 A1"
 </summary>
 <param name="S">要进行逆序操作的以16进制表示的字符串</param>
 <param name="去除空格">是否去除字符串内所有空格字符</param>
 <returns>返回经过逆序处理的字符串</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.批量补零(System.String)">
 <summary>
 将一串以16进制表示的字符串自动填充字符"0",如"A1 B C D2"将被转换为"A1 0B 0C D2"
 </summary>
 <param name="S1">需要指补零的字符串</param>
 <returns>返回经批量补零后字符串</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.两位补零(System.String)">
 <summary>
 将指定字符串自动填充字符"0",如"A"转为"0A",仅当字符不足2位时才会被补零
 </summary>
 <param name="B">要被自动补零的字符串</param>
 <returns>返回经两位补零后的字符串</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.四位补零(System.String)">
 <summary>
 将指定字符串自动填充字符"0",如"A"转为"000A",仅当字符不足4位时才会被补零
 </summary>
 <param name="B">要被自动补零的字符串</param>
 <returns>返回经四位补零后的字符串</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.校验数据完整(System.String)">
 <summary>
 通过CRC16校验方式判定字符串是否完整,提前是该字符串最后4个字符确定是被作为CRC16校验码
 </summary>
 <example>
 <para>校验设备返回的字符串是否完整</para>
 <code source="E:\CodesDemo\CRC16完整性校验_文本_vb.txt" language="vbnet"></code>
 <code source="E:\CodesDemo\CRC16完整性校验_文本_cs.txt" language="cs"></code>
 </example>
 <param name="DataString">要检查的字符串</param>
 <returns>完整:True<para></para>不完整:False</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.校验数据完整(System.Byte[])">
 <summary>
 通过CRC16校验方式判定字节数组是否完整,提前是该字符串最后4个字符确定是被作为CRC16校验码
 </summary>
 <example>
 <para>校验设备返回的字符串是否完整</para>
 <code source="E:\CodesDemo\CRC16完整性校验_bytes_vb.txt" language="vbnet"></code>
 <code source="E:\CodesDemo\CRC16完整性校验_bytes_cs.txt" language="cs"></code>
 </example>
 <param name="e">要检查的字节数组</param>
 <returns>完整:True<para></para>不完整:False</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.获取CRC校验值(System.String)">
 <summary>
 获取追加了CRC16校验的以16进制表示的字符串
 </summary>
 <param name="S">要追加CRC16的以16进制表示的字符串</param>
 <example>
 <code language="vbnet">
 dim S as string="AA BB CC DD"
 Console.WriteLine(获取CRC校验值(S))
 '输出:
 'AA BB CC DD C4 80
 </code>
 <code language="cs">
String S = "AA BB CC DD";
Console.WriteLine(获取CRC校验值(S));
//输出:
//AA BB CC DD C4 80
 </code>
 </example>
 <returns>返回追加了CRC16校验的以16进制表示的字符串</returns>
</member>
<member name="M:DSAPI.串口通讯.附加功能.获取所有串口设备">
 <summary>
 获取本机包含的所有可用串口设备,包括物理串口和虚拟串口
 </summary>
 <returns>返回检测到的串口设备列表</returns>
 <note type="important">通过本功能检测所有串口设备<b>较为耗时</b>,在确定没有新的串口设备接入或拔出时请勿高频调用</note>
</member>
<member name="M:DSAPI.串口通讯.附加功能.获取包含指定设备名称的串口列表(System.String)">
 <summary>
 获取本机包含的所有可用串口设备,这些串口设备名称包含指定的字符串,包括物理串口和虚拟串口
 </summary>
 <param name="S">检测时设备名称需要包含的字符串,如"Usb"</param>
 <returns>返回检测到的串口设备列表</returns>
 <note type="important">通过本功能检测所有串口设备<b>较为耗时</b>,在确定没有新的串口设备接入或拔出时请勿高频调用</note>
</member>
<member name="T:DSAPI.串口通讯.公共模块">
 <summary>
 全局的公共模块,在项目中一个或多个DS串口类均可通过该模块来处理消息事件,如收到数据等
 </summary>
</member>
<member name="T:DSAPI.串口通讯.公共模块.事件订阅">
 <summary>
 在项目中一个或多个DS串口类均可订阅该事件来处理消息事件,如收到数据等
 </summary>
 <param name="SenderName">指示该事件是哪个DS串口触发的</param>
 <param name="消息类型">指示触发的消息类型,如发送数据完成、接收数据完成等</param>
 <param name="Message">事件产生的具体消息或数据</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.添加事件侦听(DSAPI.串口通讯.公共模块.事件订阅)">
 <summary>
 在任何地方添加事件侦听,以订阅DS串口事件消息
 </summary>
 <param name="触发">指定当订阅的DS串口事件触发时,转由哪个委托方法进行处理</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.删除事件侦听(System.Delegate)">
 <summary>
 删除一个已添加的事件订阅
 </summary>
 <param name="触发">要从订阅列表中删除的委托方法</param>
</member>
<member name="M:DSAPI.串口通讯.公共模块.广播事件(System.String,DSAPI.串口通讯.公共模块.消息类型,System.Object)">
 <summary>
 向DS串口的公共模块广播一条自定义消息,该消息将被所有订阅的对象获取
 </summary>
 <param name="SendName">指示该广播消息的发送者自定义名称</param>
 <param name="MsgType">消息类型</param>
 <param name="Msg">要广播发送的具体消息或数据</param>
</member>
<member name="T:DSAPI.串口通讯.显示串口选择界面">
 <summary>
 显示一个包含了下拉列表的小型窗口,下拉列表中将列出本机所有串口设备,包括物理串口和虚拟串口
 </summary>
</member>
<member name="M:DSAPI.串口通讯.显示串口选择界面.选择的串口名称(System.Boolean)">
 <summary>
 显示串口选择窗口,并获取用户选定的串口名称
 </summary>
 <param name="列表中显示关闭串口项">是否在下拉列表中添加"关闭串口"项,该项也会被作为返回值使用</param>
 <returns></returns>
</member>
<member name="M:DSAPI.串口通讯.显示串口选择界面.选择的串口名称(System.String,System.Boolean)">
 <summary>
 显示指定窗口标题的串口选择窗口,并获取用户选定的串口名称
 </summary>
 <param name="列表中显示关闭串口项">是否在下拉列表中添加"关闭串口"项,该项也会被作为返回值使用</param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.从Dll创建对象``1(System.String,System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件路径">Dll文件所在路径</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.从Dll创建对象``1(System.Byte[],System.String)">
 <summary>
 从一个Dll文件反射创建其中的类型对象
 </summary>
 <typeparam name="T">即将创建的对象类型</typeparam>
 <param name="DLL文件">Dll文件的二进制数组</param>
 <param name="类全名">
 <para>类在Dll中的分级全路径</para>
 <para>示例1：Class1</para>
 <para>示例2：Class1.SubClass1</para>
 </param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.当前方法执行步骤顺序(System.String)">
 <summary>
 获取当前方法执行过程顺序，并以指定的连接符连接，如Main -> Form1_Load -> Test
 </summary>
 <param name="步骤连接符"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.反射.序列化.序列化(System.String,System.Object)">
 <summary>
 序列化到文件
 </summary>
 <param name="FilePath">文件路径</param>
 <param name="Obj">要序列化的对象</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.序列化.反序列化(System.String)">
 <summary>
 从文件反序列化
 </summary>
 <param name="FilePath">文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.XML序列化.序列化(System.String,System.Object)">
 <summary>
 序列化到文件
 </summary>
 <param name="FilePath">文件路径</param>
 <param name="Obj">要序列化的对象</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.反射.XML序列化.反序列化(System.String,System.Type)">
 <summary>
 从文件反序列化
 </summary>
 <param name="FilePath">文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.设置桌面壁纸(System.String)">
 <summary>
 将指定路径的图像文件设置为桌面壁纸,成功返回True,失败返回False
 <paramref name="壁纸文件路径">要设置的壁纸文件所在路径</paramref>
 </summary>
</member>
<member name="M:DSAPI.图形图像.从可执行文件获取小图标(System.String)">
 <summary>
 获取小图标
 </summary>
 <param name="EXE或DLL路径"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.从可执行文件获取大图标(System.String)">
 <summary>
 获取大图标
 </summary>
 <param name="EXE或DLL路径"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取文件夹图标(System.String,System.Boolean)">
 <summary>
 获取文件夹图标
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取扩展名关联图标(System.String,System.Boolean)">
 <summary>
 获取注册表关联图标
 </summary>
 <param name="扩展名">扩展名</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取图片文件缩略图(System.String,System.Drawing.Size)">
 <summary>
 获取图片缩略图
 </summary>
 <param name="图片文件路径"></param>
 <param name="需要的缩略图尺寸"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.获取绘制文字所需大小(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Int32)">
 <summary>
 测量获取绘制文字所需大小,大小将增加预增加的宽度和高度
 </summary>
 <param name="要绘制的文本">要绘制的文本</param>
 <param name="字体">字体</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.透明度(System.Drawing.Bitmap@,System.Single)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用透明特效的图像">要调整透明度的图像</param>
 <param name="透明度">亮度值,范围0%-100%</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.投影(System.Drawing.Bitmap@,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.外发光(System.Drawing.Bitmap@,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
 <summary>
 图像外发光效果
 </summary>
 <param name="要应用外发光的图像"></param>
 <param name="光晕颜色"></param>
 <param name="光晕大小"></param>
 <param name="光晕浓度"></param>
 <param name="挖空处理"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.投影(System.Drawing.Bitmap@,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
<param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.挖空投影(System.Drawing.Bitmap@,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.挖空投影(System.Drawing.Bitmap@,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.模糊(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 图像模糊效果
 </summary>
 <param name="要应用模糊特效的图像">要应用模糊效果的图像</param>
 <param name="模糊半径">模糊半径,取值范围5-100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.应用透明度遮罩(System.Drawing.Bitmap@,System.Drawing.Bitmap)">
 <summary>
 将指定图像使用指定遮罩图的透明度
 </summary>
 <param name="要应用透明度遮罩的图像"></param>
 <param name="透明遮罩"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.灰度(System.Drawing.Bitmap@)">
 <summary>
 图像灰度效果
 </summary>
 <param name="要应用灰度特效的图像">要应用灰度特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.黑白(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 图像黑白效果
 </summary>
 <param name="要应用黑白特效的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-100到100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.对比度(System.Drawing.Bitmap@,System.Int32,System.Single)">
 <summary>
 更改图像对比度
 </summary>
 <param name="要应用更改对比度的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-127到127</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.亮度(System.Drawing.Bitmap@,System.Int32)">
 <summary>
 调整图像亮度
 </summary>
 <param name="要调整亮度的图像">要调整亮度的图像</param>
 <param name="亮度值_负128到128">亮度值,范围-128,128</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.反色(System.Drawing.Bitmap@)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用反色特效的图像">要应用反色特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.保留通道(System.Drawing.Bitmap@,DSAPI.图形图像.色彩通道)">
 <summary>
 保留图像指定色彩
 </summary>
 <param name="要应用保留色彩通道特效的图像">只保留指定色彩通道特效的图像</param>
 <param name="要保留的色彩通道">指定哪种颜色通道应当保留,其余部分灰度处理</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡出淡入效果
 </summary>
 <param name="要使用背景淡出淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.01</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap)">
 <summary>
 对指定控件背景实现新图像的淡出淡入效果
 </summary>
 <param name="要使用背景淡出淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap)">
 <summary>
 对指定控件背景实现新图像的淡入效果
 </summary>
 <param name="要使用背景淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡入(System.Windows.Forms.Control@,System.Drawing.Bitmap,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡入效果
 </summary>
 <param name="要使用背景淡入的控件"></param>
 <param name="要淡入显示的新图像"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.005</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出(System.Windows.Forms.Control@,System.Double)">
 <summary>
 对指定控件背景实现新图像的淡出效果
 </summary>
 <param name="要使用背景淡出的控件"></param>
 <param name="动画速度_0到1">取值范围0-1,默认0.01</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.图形图像.动画.淡出(System.Windows.Forms.Control@)">
 <summary>
 对指定控件背景实现新图像的淡出效果
 </summary>
 <param name="要使用背景淡出的控件"></param>
 <remarks></remarks>
</member>
<member name="T:DSAPI.图形图像.彩色文字图像.数值调整">
 <summary>
 格式：ChValue=显示文本,目标控件名称,绑定的属性名称,最小值,最大值,当前值
 </summary>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.输出图像">
 <summary>
 最终输出图像
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.字体">
 <summary>
 字体
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.图形图像.彩色文字图像.描边颜色">
 <summary>
 文字描边颜色
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.字串提取.包含(System.String,System.String,System.Boolean)">
 <summary>
 判断是否包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.包含(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否完全包含指定字符串数组
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.字串提取.包含其一(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否至少包含指定字符串数组中的一个
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.控件.控制台窗口关闭时执行(System.Action)">
 <summary>
 当本函数所在代码为控制台窗体,且控制台窗口被用户关闭时,执行指定的方法.
 注意:该方法不与GC资源回收器同步,请勿在此方法中执行较为耗时的过程,因为执行时可能部分调用的对象已经被GC回站.
 </summary>
 <param name="Act"></param>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.String)">
 <summary>
 将路径添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.String[])">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.添加路径节点到TreeView(System.Windows.Forms.TreeView,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.通过路径查找节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView查找指定树路径的唯一节点
 </summary>
 <param name="Tv">要在其中查找的TreeView</param>
 <param name="路径">完整的树路径</param>
 <returns>返回一个节点</returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.清除指定路径节点的子节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView中清空指定树路径中最后一个节点
 </summary>
 <param name="Tv">要在其中清空树路径中最后一个节点的TreeView</param>
 <param name="路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.将节点绑定到文件系统(System.Windows.Forms.TreeView,System.String,System.Boolean)">
 <summary>
 以逐层添加模式将指定TreeView控件绑定到驱动器以显示驱动器文件目录
 </summary>
 <param name="T">目标TreeView</param>
 <param name="文件夹路径">要显示的文件夹路径</param>
 <param name="点击节点时加载子文件列表">是否添加点击事件以支持用户操作</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.TreeView控件.解除节点与文件系统的绑定关系(System.Windows.Forms.TreeView)">
 <summary>
 从目标TreeView解除驱动器绑定并清除内容
 </summary>
 <param name="T">目标TreeView</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.控件.Form窗体.透明窗体样式显示图像(System.Windows.Forms.Form,System.Drawing.Bitmap,System.Byte)">
 <summary>
 将一个窗体以UpdateLayeredWindow方式显示为指定的PNG格式图像
 </summary>
 <param name="要显示透明图像的窗体"></param>
 <param name="要显示的透明图像"></param>
 <param name="透明度_0到255"></param>
 <note type="important">如果发现图像显示不完整,请确认窗体当前大小是否足够显示指定的图像</note>
 <example>
 <para>显示PNG异形窗体</para>
 <para>素材图片,添加至资源文件</para>
 <para><img src="../CodesImages/251958-20190225155934366-602538992.png"/></para>
 <para>运行后效果</para>
 <para><img src="../CodesImages/251958-20190225155949563-2079818713.png"/></para>
 <para>示例源码</para>
 <code language="vbnet">
 Me.Size = My.Resources._1409908158443933277.Size
DSAPI.控件.Form窗体.透明窗体样式显示图像(Me, My.Resources._1409908158443933277, 255)
DSAPI.控件.Form窗体.鼠标点击任意位置拖动窗体(Me)
</code>
<code language="cs">
this.Size = My.Resources._1409908158443933277.Size;
DSAPI.控件.Form窗体.透明窗体样式显示图像(this, My.Resources._1409908158443933277, 255);
DSAPI.控件.Form窗体.鼠标点击任意位置拖动窗体(this);
 </code>        
 </example>
</member>
<member name="T:DSAPI.控件.文件拖放助手">
 <summary>
 可对控件加入文件拖放支持，该操作无需手动开启控件的AllowDrop属性。
 </summary>
 <example>
 <para>对窗体控件加入文件拖放支持</para>
 <code source="E:\CodesDemo\文件拖放助手_vb.txt" language="vbnet"></code>
 <code source="E:\CodesDemo\文件拖放助手_cs.txt" language="cs"></code>
 </example>
 <remarks>
 <note type="important">注意：请在控件完全初始化完成后再使用<b>初始化</b>，建议将初始化写在窗体的<b>Shown</b>事件过程</note>
 </remarks>
</member>
<member name="E:DSAPI.控件.文件拖放助手.拖入文件">
 <summary>
 当用户将一个或多个文件拖至控件上时触发
 </summary>
 <param name="控件">指示用户将文件拖至哪个控件上</param>
 <param name="文件路径">用户拖入的文件列表</param>
</member>
<member name="P:DSAPI.控件.文件拖放助手.支持扩展名">
 <summary>
 批示哪些文件类型将被拖放助手接受并导致触发拖入文件事件
 </summary>
 <returns>支持的文件类型列表</returns>
</member>
<member name="F:DSAPI.控件.文件拖放助手.绑定控件列表">
 <summary>
 指示哪些控件将被文件拖放助手自动绑定文件拖放操作
 </summary>
</member>
<member name="M:DSAPI.控件.文件拖放助手.初始化">
 <summary>
 对配置中添加的控件列表进行自动化事件绑定，仅当初始化完成后，目标控件才能起到文件拖放支持作用。
 </summary>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.在指定控件上启动视频预览(System.IntPtr,System.Drawing.Rectangle,System.Int32)">
 <summary>
 开始显示图像
 </summary>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.停止预览">
 <summary>
 停止显示
 </summary>
</member>
<member name="M:DSAPI.摄像头.摄像头_avicap32.停止录像">
 <summary>
 停止录像
 </summary>
</member>
<member name="M:DSAPI.文件.系统右键菜单.#ctor">
 <summary>Default constructor</summary>
</member>
<member name="M:DSAPI.文件.系统右键菜单.Finalize">
 <summary>Ensure all resources get released</summary>
</member>
<member name="M:DSAPI.文件.系统右键菜单.GetContextMenuInterfaces(DSAPI.文件.系统右键菜单.IShellFolder,System.IntPtr[],System.IntPtr@)">
 <summary>Gets the interfaces to the context menu</summary>
 <param name="oParentFolder">Parent folder</param>
 <param name="arrPIDLs">PIDLs</param>
 <returns>true if it got the interfaces, otherwise false</returns>
</member>
<member name="M:DSAPI.文件.ShellContextMenuException.#ctor">
 <summary>Default contructor</summary>
</member>
<member name="M:DSAPI.文件.ShellContextMenuException.#ctor(System.String)">
 <summary>Constructor with message</summary>
 <param name="message">Message</param>
</member>
<member name="T:DSAPI.文件.CMD命令行进程代理">
 <summary>
 用来和CMD.exe或指定exe进行输出重定向的简化使用工具，可隐藏或显式地启动一个cmd.exe，并将输出流、输入流和错误流重定向至代理，通过事件触发方式与之交互。
 </summary>
 <example>
 <para>输出和输出控制台<b>CMD.EXE</b>内容</para>
 <para><img src="../CodesImages/251958-20190514143031705-856083432.gif"/></para>
 <code language="vb" source="e:\codesdemo\CMD命令行_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\CMD命令行_c#.txt"></code>
 </example>
</member>
<member name="T:DSAPI.文件.FolderNameEditor">
 <summary>
 FolderBrowser 的设计器基类
 </summary>
</member>
<member name="T:DSAPI.文件.文件夹选择对话框">
 <summary>
 Vista 样式的选择文件对话框的基类
 </summary>
</member>
<member name="M:DSAPI.文件.文件夹选择对话框.#ctor">
 <summary>
 初始化 FolderBrowser 的新实例
 </summary>
</member>
<member name="P:DSAPI.文件.文件夹选择对话框.选定路径">
 <summary>
 获取在 FolderBrowser 中选择的文件夹路径
 </summary>
</member>
<member name="M:DSAPI.文件.文件夹选择对话框.打开对话框(System.Windows.Forms.IWin32Window)">
 <summary>
 向用户显示 FolderBrowser 的对话框
 </summary>
 <param name="宿主">任何实现 System.Windows.Forms.IWin32Window（表示将拥有模式对话框的顶级窗口）的对象。</param>
 <returns></returns>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Processor">
 <summary>
  CPU 处理器 
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Processor_LoadPercentage">
 <summary>
 CPU使用率
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PhysicalMemory">
 <summary>
 物理内存条
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Keyboard">
 <summary>
 键盘
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PointingDevice">
 <summary>
 输入设备
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_FloppyDrive">
 <summary>
 软盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_DiskDrive">
 <summary>
 硬盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.DiskDrive_SerialNumber">
 <summary>
 硬盘序列号
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_CDROMDrive">
 <summary>
 光盘驱动器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_BaseBoard">
 <summary>
 主板
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_BIOS">
 <summary>
 BIOS芯片
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_SoundDevice">
 <summary>
 多媒体设备,声卡
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_USBController">
 <summary>
 USB控制器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_NetworkAdapter">
 <summary>
 网络适配器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.NetworAdapterMAC">
 <summary>
 网卡MAC地址
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_Printer">
 <summary>
 打印机
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_PrintJob">
 <summary>
 打印机任务
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_POTSModem">
 <summary>
 MODEM调制解调器
 </summary>
 <remarks></remarks>
</member>
<member name="F:DSAPI.硬件信息.WMIName.Win32_VideoController">
 <summary>
 显卡
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.Hdd.AtapiDevice">
 
 ATAPI驱动器相关
 
</member>
<member name="M:DSAPI.神扩展.神扩展.提取指定行(System.String,System.Int32)">
 <summary>
 提取指定行的内容,从第0行开始
 </summary>
 <param name="S"></param>
 <param name="要取的行号"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.前面插入(System.String,System.String,System.Boolean)">
 <summary>
 在字符串前部插入指定字符串
 </summary>
 <param name="S"></param>
 <param name="插入内容"></param>
 <param name="追加换行符"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.前面插入(System.String,System.Boolean,System.String,System.Boolean)">
 <summary>
 在字符串前部插入指定字符串
 </summary>
 <param name="S"></param>
 <param name="插入内容"></param>
 <param name="追加换行符"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.不存在``1(``0)">
 <summary>
 检查目标是否是空对象，如果是空对象返回是，反之返回否
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在``1(``0)">
 <summary>
 检查目标是否是空对象，如果是空对象返回否，反之返回是
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含(System.String,System.String,System.Boolean)">
 <summary>
 判断是否包含指定字符串
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否完全包含指定字符串数组
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.包含其一(System.String,System.String[],System.Boolean)">
 <summary>
 判断是否至少包含指定字符串数组中的一个
 </summary>
 <param name="S"></param>
 <param name="要查找的字符串"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.输出(System.Object)">
 <summary>
 输出到“输出窗口”
 </summary>
 <param name="S"></param>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.无">
 <summary>
 不使用任何图标
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.手形或停止或错误">
 <summary>
 消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号。
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.问号">
 <summary>
 消息框包含一个符号，该符号包含一个圆圈，圆圈中为问号。 不再建议使用问号消息图标，因为这种图标无法清楚地表示特定类型的消息，并且作为问题的消息表述可应用于任何消息类型。
 <para>此外，用户可能会将问号符号与帮助信息符合混淆。 因此，请不要在消息框中使用问号符号。 系统继续支持它包含的内容，只为满足反向兼容性。</para>
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.感叹号或警示">
 <summary>
  消息框包含一个符号，该符号包含一个黄色背景三角形，三角形中为感叹号。
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.消息框图标.普通消息i">
 <summary>
  消息框包含一个符号，该符号在圆圈中包含小写字母 i。
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环(System.Int32,System.Int32,DSAPI.神扩展.神扩展.循环委托)">
 <summary>
 执行一个从起始点到结束点的循环操作
 </summary>
 <param name="循环起始点"></param>
 <param name="循环结束点"></param>
 <param name="每次循环调用">指向一个委托方法，每次循环时执行该方法。
 <para>示例VB.NET： sub 每次循环操作(当前循环点 As Integer) As Object</para>
 <para>示例C#："void 每次循环操作(integer 当前循环点)"</para>
 </param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历``1(System.Collections.Generic.IEnumerable{``0},DSAPI.神扩展.神扩展.遍历委托)">
 <summary>
 对目标进行遍历，并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="每次遍历调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control.ControlCollection,DSAPI.神扩展.神扩展.遍历委托,System.Boolean)">
 <summary>
 遍历所有控件,并调用指定的委托方法
 </summary>
 <param name="遍历对象"></param>
 <param name="每次遍历调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control.ControlCollection,System.Action{System.Windows.Forms.Control},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
 <param name="包含所有子控件"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control.ControlCollection,System.Action{System.Windows.Forms.Control},System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件(System.Windows.Forms.Control,DSAPI.神扩展.神扩展.遍历委托,System.Boolean)">
 <summary>
 遍历指定类型的控件
 </summary>
 <param name="遍历对象"></param>
 <param name="每次遍历调用"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.遍历控件``1(System.Windows.Forms.Control,System.Action{System.Windows.Forms.Control},System.Boolean)">
 <summary>
 遍历指定类型的控件,不包括多级控件
 </summary>
 <typeparam name="控件类型"></typeparam>
 <param name="遍历对象"></param>
 <param name="执行过程"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在文件(System.String)">
 <summary>
 当字符串为一个文件路径时，检查该路径的文件是否存在
 </summary>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.存在文件夹(System.String)">
 <summary>
 当字符串为一个文件夹路径时，检查该路径的文件夹是否存在
 </summary>
 <param name="文件夹路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.当前堆栈中指定层的方法(System.Int32)">
 <summary>
 获取运行到当前方法时的链路层中的指定方法
 </summary>
 <param name="层级">1表示当前方法,数字越大,调用层级越往前</param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.结果(System.TimeSpan)">
 <summary>
 输出TimeSpan计时结果,如**毫秒
 </summary>
 <param name="T"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.结果(System.Diagnostics.Stopwatch)">
 <summary>
 输出StopWatch计时结果,如**毫秒
 </summary>
 <param name="T"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.计时器.计时结果">
 <summary>
 输出计时结果，如***毫秒
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.矩形.Width">
 <summary>
 矩形宽度
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.神扩展.神扩展.矩形.Height">
 <summary>
 矩形高度
 </summary>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action)">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object[]},System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object},System.Object)">
 <summary>
 在控件上执行相应的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object},System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object},System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.委托执行(System.Windows.Forms.Control,System.Action{System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object},System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
 <summary>
 在控件上执行相应的委托方法，支持最多15个参数的委托方法
 </summary>
 <param name="C"></param>
 <param name="要委托的方法"></param>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期日">
 <summary>
 字符串“星期日”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期一">
 <summary>
 字符串“星期一”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期二">
 <summary>
 字符串“星期二”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期三">
 <summary>
 字符串“星期三”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期四">
 <summary>
 字符串“星期四”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期五">
 <summary>
 字符串“星期五”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.星期六">
 <summary>
 字符串“星期六”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周日">
 <summary>
 字符串“周日”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周一">
 <summary>
 字符串“周一”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周二">
 <summary>
 字符串“周二”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周三">
 <summary>
 字符串“周三”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周四">
 <summary>
 字符串“周四”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周五">
 <summary>
 字符串“周五”
 </summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.周六">
 <summary>
 字符串“周六”
 </summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.更改透明度(System.Drawing.Bitmap,System.Single)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用透明特效的图像">要调整透明度的图像</param>
 <param name="透明度">亮度值,范围0%-100%</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Bitmap,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.外发光(System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32,System.Boolean)">
 <summary>
 图像外发光效果
 </summary>
 <param name="要应用外发光的图像"></param>
 <param name="光晕颜色"></param>
 <param name="光晕大小"></param>
 <param name="光晕浓度"></param>
 <param name="挖空处理"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.投影(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用投影特效的图像">要应用模糊特效的图像</param>
<param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Bitmap,System.Int32,System.Int32)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.挖空投影(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Point)">
 <summary>
 图像投影效果
 </summary>
 <param name="要应用挖空投影特效的图像">要应用挖空投影特效的图像</param>
 <param name="影子大小"></param>
 <param name="影子浓度">影子浓度,最佳取值1-50</param>
 <param name="偏移量">投影自左上角位置开始偏移的像素距离</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.模糊(System.Drawing.Bitmap,System.Int32)">
 <summary>
 图像模糊效果
 </summary>
 <param name="要应用模糊特效的图像">要应用模糊效果的图像</param>
 <param name="模糊半径">模糊半径,取值范围5-100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.应用透明度遮罩(System.Drawing.Bitmap,System.Drawing.Bitmap)">
 <summary>
 将指定图像使用指定遮罩图的透明度
 </summary>
 <param name="要应用透明度遮罩的图像"></param>
 <param name="透明遮罩"></param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.灰度(System.Drawing.Bitmap)">
 <summary>
 图像灰度效果
 </summary>
 <param name="要应用灰度特效的图像">要应用灰度特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.黑白(System.Drawing.Bitmap,System.Int32)">
 <summary>
 图像黑白效果
 </summary>
 <param name="要应用黑白特效的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-100到100</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.更改对比度(System.Drawing.Bitmap,System.Int32,System.Single)">
 <summary>
 更改图像对比度
 </summary>
 <param name="要应用更改对比度的图像">要应用黑白特效的图像</param>
 <param name="分量值">加亮或变暗的分量,值为-127到127</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.反色(System.Drawing.Bitmap)">
 <summary>
 调整图像透明度
 </summary>
 <param name="要应用反色特效的图像">要应用反色特效的图像</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.保留色彩通道(System.Drawing.Bitmap,DSAPI.图形图像.色彩通道)">
 <summary>
 保留图像指定色彩
 </summary>
 <param name="要应用保留色彩通道特效的图像">只保留指定色彩通道特效的图像</param>
 <param name="要保留的色彩通道">指定哪种颜色通道应当保留,其余部分灰度处理</param>
 <remarks></remarks>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.透明色">
<summary>
透明色 Color=(255,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.爱丽丝蓝色">
<summary>
爱丽丝蓝色 Color=(240,248,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.仿古白色">
<summary>
仿古白色 Color=(250,235,215)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.湖绿色">
<summary>
湖绿色 Color=(0,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海洋蓝色">
<summary>
海洋蓝色 Color=(127,255,212)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蔚蓝色">
<summary>
蔚蓝色 Color=(240,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.米色">
<summary>
米色 Color=(245,245,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.乳白色">
<summary>
乳白色 Color=(255,228,196)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑色">
<summary>
黑色 Color=(0,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.杏仁白色">
<summary>
杏仁白色 Color=(255,235,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓝色">
<summary>
蓝色 Color=(0,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫罗兰色">
<summary>
紫罗兰色 Color=(138,43,226)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.棕色">
<summary>
棕色 Color=(165,42,42)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.木头色">
<summary>
木头色 Color=(222,184,135)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.军蓝色">
<summary>
军蓝色 Color=(95,158,160)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡黄色">
<summary>
淡黄色 Color=(127,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.巧克力色">
<summary>
巧克力色 Color=(210,105,30)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.珊瑚色">
<summary>
珊瑚色 Color=(255,127,80)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.矢车菊蓝色">
<summary>
矢车菊蓝色 Color=(100,149,237)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.米绸色">
<summary>
米绸色 Color=(255,248,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.赤红色">
<summary>
赤红色 Color=(220,20,60)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.青色">
<summary>
青色 Color=(0,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深蓝色">
<summary>
深蓝色 Color=(0,0,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深青色">
<summary>
深青色 Color=(0,139,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗金色">
<summary>
暗金色 Color=(184,134,11)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深灰色">
<summary>
深灰色 Color=(169,169,169)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深绿色">
<summary>
深绿色 Color=(0,100,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑暗卡其色">
<summary>
黑暗卡其色 Color=(189,183,107)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深洋红色">
<summary>
深洋红色 Color=(139,0,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深橄榄绿色">
<summary>
深橄榄绿色 Color=(85,107,47)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深橙色">
<summary>
深橙色 Color=(255,140,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗兰花色">
<summary>
暗兰花色 Color=(153,50,204)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深红色">
<summary>
深红色 Color=(139,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑鲑鱼色">
<summary>
黑鲑鱼色 Color=(233,150,122)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深海绿色">
<summary>
深海绿色 Color=(143,188,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黑暗石板蓝色">
<summary>
黑暗石板蓝色 Color=(72,61,139)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深板岩灰色">
<summary>
深板岩灰色 Color=(47,79,79)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深蓝绿色">
<summary>
深蓝绿色 Color=(0,206,209)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗紫色">
<summary>
暗紫色 Color=(148,0,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深粉红色">
<summary>
深粉红色 Color=(255,20,147)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.深天蓝色">
<summary>
深天蓝色 Color=(0,191,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.暗灰色">
<summary>
暗灰色 Color=(105,105,105)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.道奇蓝色">
<summary>
道奇蓝色 Color=(30,144,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.耐火砖色">
<summary>
耐火砖色 Color=(178,34,34)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.花白色">
<summary>
花白色 Color=(255,250,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.森林绿色">
<summary>
森林绿色 Color=(34,139,34)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫红色">
<summary>
紫红色 Color=(255,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡灰色">
<summary>
淡灰色 Color=(220,220,220)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.幽灵白色">
<summary>
幽灵白色 Color=(248,248,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.金色">
<summary>
金色 Color=(255,215,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.金毛色">
<summary>
金毛色 Color=(218,165,32)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.灰色">
<summary>
灰色 Color=(128,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿色">
<summary>
绿色 Color=(0,128,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿黄色">
<summary>
绿黄色 Color=(173,255,47)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.甘露色">
<summary>
甘露色 Color=(240,255,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亮粉色">
<summary>
亮粉色 Color=(255,105,180)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.印度红色">
<summary>
印度红色 Color=(205,92,92)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.靛青色">
<summary>
靛青色 Color=(75,0,130)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.象牙色">
<summary>
象牙色 Color=(255,255,240)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄褐色">
<summary>
黄褐色 Color=(240,230,140)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薰衣草色">
<summary>
薰衣草色 Color=(230,230,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薰衣草腮红色">
<summary>
薰衣草腮红色 Color=(255,240,245)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.草坪绿色">
<summary>
草坪绿色 Color=(124,252,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.柠檬雪纺色">
<summary>
柠檬雪纺色 Color=(255,250,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅蓝色">
<summary>
浅蓝色 Color=(173,216,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.轻珊瑚色">
<summary>
轻珊瑚色 Color=(240,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅青色">
<summary>
浅青色 Color=(224,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅金黄色">
<summary>
浅金黄色 Color=(250,250,210)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅灰色">
<summary>
浅灰色 Color=(211,211,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅绿色">
<summary>
浅绿色 Color=(144,238,144)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅粉红色">
<summary>
浅粉红色 Color=(255,182,193)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡鲑鱼色">
<summary>
淡鲑鱼色 Color=(255,160,122)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅海绿色">
<summary>
浅海绿色 Color=(32,178,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅天蓝色">
<summary>
浅天蓝色 Color=(135,206,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅板岩灰色">
<summary>
浅板岩灰色 Color=(119,136,153)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅钢蓝色">
<summary>
浅钢蓝色 Color=(176,196,222)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅黄色">
<summary>
浅黄色 Color=(255,255,224)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.酸橙色">
<summary>
酸橙色 Color=(0,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.柠檬绿色">
<summary>
柠檬绿色 Color=(50,205,50)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亚麻色">
<summary>
亚麻色 Color=(250,240,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.品红色">
<summary>
品红色 Color=(255,0,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.栗色">
<summary>
栗色 Color=(128,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中海蓝宝石色">
<summary>
中海蓝宝石色 Color=(102,205,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中蓝色">
<summary>
中蓝色 Color=(0,0,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中兰花色">
<summary>
中兰花色 Color=(186,85,211)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中紫色">
<summary>
中紫色 Color=(147,112,219)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中海绿色">
<summary>
中海绿色 Color=(60,179,113)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中号SlateBlue色">
<summary>
中号SlateBlue色 Color=(123,104,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中春绿色">
<summary>
中春绿色 Color=(0,250,154)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中绿松石色">
<summary>
中绿松石色 Color=(72,209,204)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.中紫红色">
<summary>
中紫红色 Color=(199,21,133)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.午夜蓝色">
<summary>
午夜蓝色 Color=(25,25,112)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.薄荷色">
<summary>
薄荷色 Color=(245,255,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅玫瑰色">
<summary>
浅玫瑰色 Color=(255,228,225)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.莫卡辛皮革色">
<summary>
莫卡辛皮革色 Color=(255,228,181)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.纳瓦霍白色">
<summary>
纳瓦霍白色 Color=(255,222,173)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海军蓝色">
<summary>
海军蓝色 Color=(0,0,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.旧织物色">
<summary>
旧织物色 Color=(253,245,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橄榄色">
<summary>
橄榄色 Color=(128,128,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.亚橄榄色">
<summary>
亚橄榄色 Color=(107,142,35)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橙子色">
<summary>
橙子色 Color=(255,165,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.橙红色">
<summary>
橙红色 Color=(255,69,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.兰花色">
<summary>
兰花色 Color=(218,112,214)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.枯萎鼠尾草色">
<summary>
枯萎鼠尾草色 Color=(238,232,170)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡绿色">
<summary>
淡绿色 Color=(152,251,152)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.淡青绿色">
<summary>
淡青绿色 Color=(175,238,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.浅紫红色">
<summary>
浅紫红色 Color=(219,112,147)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.木瓜蒂色">
<summary>
木瓜蒂色 Color=(255,239,213)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.桃红色">
<summary>
桃红色 Color=(255,218,185)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.土黄色">
<summary>
土黄色 Color=(205,133,63)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.粉色">
<summary>
粉色 Color=(255,192,203)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.梅红色">
<summary>
梅红色 Color=(221,160,221)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.粉蓝色">
<summary>
粉蓝色 Color=(176,224,230)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.紫色">
<summary>
紫色 Color=(128,0,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.红色">
<summary>
红色 Color=(255,0,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.玫瑰褐色">
<summary>
玫瑰褐色 Color=(188,143,143)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.宝蓝色">
<summary>
宝蓝色 Color=(65,105,225)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.马鞍棕色">
<summary>
马鞍棕色 Color=(139,69,19)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.三文鱼红色">
<summary>
三文鱼红色 Color=(250,128,114)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.沙土褐色">
<summary>
沙土褐色 Color=(244,164,96)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海绿色">
<summary>
海绿色 Color=(46,139,87)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.海贝壳色">
<summary>
海贝壳色 Color=(255,245,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.赭色">
<summary>
赭色 Color=(160,82,45)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.银色">
<summary>
银色 Color=(192,192,192)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.天蓝色">
<summary>
天蓝色 Color=(135,206,235)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.板岩蓝色">
<summary>
板岩蓝色 Color=(106,90,205)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.板岩灰色">
<summary>
板岩灰色 Color=(112,128,144)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.雪白色">
<summary>
雪白色 Color=(255,250,250)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.春天绿色">
<summary>
春天绿色 Color=(0,255,127)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.钢蓝色">
<summary>
钢蓝色 Color=(70,130,180)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.棕褐色">
<summary>
棕褐色 Color=(210,180,140)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓝绿色">
<summary>
蓝绿色 Color=(0,128,128)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.蓟色">
<summary>
蓟色 Color=(216,191,216)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.番茄色">
<summary>
番茄色 Color=(255,99,71)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绿松石色">
<summary>
绿松石色 Color=(64,224,208)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.绛紫色">
<summary>
绛紫色 Color=(238,130,238)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.小麦黄色">
<summary>
小麦黄色 Color=(245,222,179)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.白色">
<summary>
白色 Color=(255,255,255)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.白烟色">
<summary>
白烟色 Color=(245,245,245)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄色">
<summary>
黄色 Color=(255,255,0)
</summary>
</member>
<member name="F:DSAPI.神扩展.神扩展.中文颜色.黄绿色">
<summary>
黄绿色 Color=(154,205,50)
</summary>
</member>
<member name="M:DSAPI.神扩展.神扩展.给内部成员赋值``1(``0,System.String,System.Object,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并赋给指定的值。成功返回True，失败返回False
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="要设置的值"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取内部成员值``1(``0,System.String,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并获取该成员的值。如果找不到成员或成员值为Nothing/Null时返回Nothing/Null。
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="成员目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.获取内部成员``1(``0,System.String,DSAPI.神扩展.神扩展.成员类型)">
 <summary>
 查找对象内部成员，并获取该成员。如果找不到成员或成员值为Nothing/Null时返回Nothing/Null。
 </summary>
 <param name="Obj"></param>
 <param name="字段或属性名称"></param>
 <param name="成员目标"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化到文件_DS格式``1(``0,System.String)">
 <summary>
 将对象序列化成Byte数组，并写入到指定的文件路径,前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="D"></param>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化到文件_XML格式``1(``0,System.String)">
 <summary>
 将对象序列化成XML字符串，并写入到指定的文件路径,前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="D"></param>
 <param name="文件路径"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成Bytes数组_DS格式``1(``0)">
 <summary>
 将对象序列化成Byte数组，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从Byte数组反序列化_DS格式(System.Byte[])">
 <summary>
 将对象由指定的Byte数组进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Bytes">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_DS格式(System.String)">
 <summary>
 将对象由指定的文件路径进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的Byte数组</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.序列化成XML字符串_XML格式``1(``0)">
 <summary>
 将对象序列化成XML字符串，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="Obj"></param>
 <returns></returns>
</member>
<member name="M:DSAPI.神扩展.神扩展.从XML字符串反序列化_XML序列化格式(System.String,System.Type)">
 <summary>
 将对象由指定的XML字符串进行反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="XML">要从中反序列化的XML字符串</param>
 <param name="类型">要反序列化的目标类型</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.从文件路径反序列化_XML格式(System.String,System.Type)">
 <summary>
 将对象由指定的文件路径进行XML反序列化生成，前提是对象支持序列化(即打上了Serializable特性标记)。
 </summary>
 <param name="文件路径">要从中反序列化的Byte数组</param>
 <param name="类型">要反序列化的目标类型</param>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 将路径添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点到(System.Windows.Forms.TreeView,System.String[])">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.添加路径节点(System.Windows.Forms.TreeView,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
 <summary>
 将路径数组批量添加到目标TreeView
 </summary>
 <param name="T">要添加到的Treeview</param>
 <param name="节点路径数组">完整的树路径数组</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.通过路径查找节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView查找指定树路径的唯一节点
 </summary>
 <param name="Tv">要在其中查找的TreeView</param>
 <param name="路径">完整的树路径</param>
 <returns>返回一个节点</returns>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.清除指定路径节点的子节点(System.Windows.Forms.TreeView,System.String)">
 <summary>
 从指定TreeView中清空指定树路径中最后一个节点
 </summary>
 <param name="Tv">要在其中清空树路径中最后一个节点的TreeView</param>
 <param name="路径">完整的树路径</param>
 <remarks></remarks>
</member>
<member name="M:DSAPI.神扩展.神扩展.设置进度条状态(System.Windows.Forms.ProgressBar,DSAPI.Win7特性.进度条状态)">
 <summary>
 使ProgressBar控件应用相应的样式
 <note type="caution">本功能不支持XP或更低版本的操作系统</note> 
 </summary>
 <param name="进度条">要设置样式的ProgressBar控件</param>
 <param name="状态">要设置的进度条状态,如<b>正常</b>、<b>错误</b>、<b>暂停</b>等</param>
 <example>
 <para>将指定PrgressBar进度条控件设置为指定的样式</para>
 <para><img src="../CodesImages/进度条WIN7风格.gif"/></para>
 <para><a href="../Demos/DSAPI对Winform中Progressbar控件的WIN7风格样式控制.rar">下载本示例项目源码</a></para>
 <code language="vb" source="e:\codesdemo\进度条WIN7风格_vb.txt"></code>
 <code language="cs" source="e:\codesdemo\进度条WIN7风格_cs.txt"></code>
 </example>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环添加``1(System.Collections.Generic.List{``0},System.Int32,System.Func{``0})">
 <summary>
 从0开始到循环次数-1,向列表添加项
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="循环次数"></param>
 <param name="项"></param>
</member>
<member name="M:DSAPI.神扩展.神扩展.循环添加``1(System.Collections.Generic.List{``0},System.Int32,System.Func{System.Int32,``0})">
 <summary>
 从0开始到循环次数-1,向列表添加项,Func中第1个参数为循环序号
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Item"></param>
 <param name="循环次数"></param>
 <param name="项"></param>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.读取数据_String(System.String,System.Int32,System.String,System.Text.Encoding,System.Int32,System.Boolean)">
 <summary>
 向串口发送字符串数据并等待返回,编码随配置信息而定
 </summary>
 <param name="IP">要发送到的目标IP地址</param>
 <param name="端口">要发送到的目标主机端口</param>
 <param name="发送的数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字符串,编码随配置信息而定</returns>
</member>
<member name="M:DSAPI.网络.Socket传输_Udp.客户端.读取数据_Bytes(System.String,System.Int32,System.Byte[],System.Int32,System.Boolean)">
 <summary>
 向串口发送字节数组并等待返回
 </summary>
 <param name="IP">要发送到的目标IP地址</param>
 <param name="端口">要发送到的目标主机端口</param>
 <param name="发送的数据">要发送的字符串</param>
 <param name="等待超时时间_毫秒">在此期间进行阻塞,直到接收到数据或达到超时时间</param>
 <param name="追加CRC16校验">是否自动追加CRC16校验码</param>
 <returns>返回接收到的字节数组</returns>
</member>
<member name="P:DSAPI.网络.HTTP监听.允许外网连接">
 <summary>
 是否允许外网访问本服务
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.绑定端口">
 <summary>
 本服务欲绑定的监听端口号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.使用参数前导符">
 <summary>
 是否使用参数前导符，当此属性设置为True时，客户端访问时若没有以指定参数前导符开头的请求将被丢弃。
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.参数前导符">
 <summary>
 设置或获取参数前导符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听.编码">
 <summary>
 确定解析用户URL以及返回给用户的数据使用何种字符编码
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.允许外网连接">
 <summary>
 是否允许外网访问本服务
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.绑定端口">
 <summary>
 本服务欲绑定的监听端口号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.使用参数前导符">
 <summary>
 是否使用参数前导符，当此属性设置为True时，客户端访问时若没有以指定参数前导符开头的请求将被丢弃。
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.参数前导符">
 <summary>
 设置或获取参数前导符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:DSAPI.网络.HTTP监听_指令版.监听状态">
 <summary>
 确定解析用户URL以及返回给用户的数据使用何种字符编码
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.DSWebClient">
 <summary>
 一个可设置自定义超时时间的WebClient
 </summary>
</member>
<member name="M:DSAPI.网络.获取域名指向的IP(System.String)">
 <summary>
 获取域名指向的IP,如通过动态域名获取IP
 </summary>
 <param name="不包括http的域名">要解析成IP的域名,不包括http://开头</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:DSAPI.网络.局域网广播._Port">
 <summary>
 局域网广播器_客户端
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.开始接收广播">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.开始接收广播(System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网广播.停止接收广播">
 <summary>
 停止接收
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.局域网组播.局域网组播_客户端">
 <summary>
 局域网广播器_客户端
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播(System.String,System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播">
 <summary>
 开始接收组播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.开始接收组播(System.Int32)">
 <summary>
 开始接收广播消息
 </summary>
 <remarks></remarks>
</member>
<member name="M:DSAPI.网络.局域网组播.局域网组播_客户端.停止接收组播">
 <summary>
 停止接收
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.网络.局域网组播.局域网组播_服务端">
 <summary>
 局域网广播器_服务端
 </summary>
 <remarks></remarks>
</member>
<member name="T:DSAPI.语言和版本.国家名称">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="T:DSAPI.语言和版本.多国语言">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="T:DSAPI.语言和版本.主版本">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="P:DSAPI.语言和版本.主版本.未指定">
 <summary>
 表示未特定为某个版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.内部测试版">
 <summary>
 Alpha：通常会送交到开发软件的组织或社群中的各个软件测试者，用作内部测试。在市场上，越来越多公司会邀请外部的客户或合作伙伴参与其软件的Alpha测试阶段。这令软件在此阶段有更大的可用性测试。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.外部测试版">
 <summary>
 Beta：软件开发公司为对外宣传，将非正式产品免费发送给具有典型性的用户，让用户测试该软件的不足之处及存在问题，以便在正式发行前进一步改进和完善 。一般可通过Internet免费下载，也可以向软件公司索取。Beta版本是第一个对外公开的软件版本，是由公众参与的测试阶段。一般来说，Beta包含所有功能，但可能有一些已知问题和较轻微的臭虫（Bug）。Beta版本的测试者通常是开发软件的组织的客户，他们会以免费或优惠价钱得到软件，但会成为组织的免费测试者。Beta版本主要测试产品的支援和市场反应（在邀请Beta用户时）等。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.演示版">
 <summary>
 Demo：主要是演示正式软件的部分功能，用户可以从中得知软件的基本操作，为正式产品的发售扩大影响。如果是游戏的话，则只有一两个关卡可以玩。该版本也可以从Internet上免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.发行版">
 <summary>
 Release：稳定的发行版，可从Internet上免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.主版本.RC版">
 <summary>
 Release Candidate：指可能成为最终产品的版本，如果没有再出现问题则可释出正式版本。在此阶段，产品包含所有功能亦不会出现严重问题。通常此阶段的产品是接近完整的。
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.语言和版本.次版本">
 <summary>
 可从String类型隐式转换
 </summary>
</member>
<member name="P:DSAPI.语言和版本.次版本.未指定">
 <summary>
 表示未特定为某个版本
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.增强版或加强版">
 <summary>
 Enhanced：如果是一般软件，一般称作“"增强版"”，会加入一些实用的新功能。如果是游戏，一般称作“"加强版"”，会加入一些新的游戏场景和游戏情节等。这是正式发售的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.自由版_免费版">
 <summary>
 Free：这一般是个人或自由软件联盟组织的成员制作的软件，希望免费给大家使用，没有版权，一般也是通过Internet免费下载。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.完全版_完整版">
 <summary>
 Full：也就是正式版，是最终正式发售的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.共享版">
 <summary>
 Shareware：有些公司为了吸引客户，对于他们制作的某些软件，可以让用户通过Internet免费下载的方式获取。不过，此版本软件多会带有一些使用时间或次数的限制，但可以利用在线注册或电子注册成为正式版用户。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.升级版">
 <summary>
 Upgrade：当你有某个软件以前的正式版本时，可以购买升级版，将你的软件升级为最新版。升级后的软件与正式版在功能上相同，但价格会低些，这主要是为了给原有的正版用户提供优惠。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.零售版">
 <summary>
 Retail：一般只针对个人的功能不是很全的版本，价格比较低，升级时间也有限制。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.增强版">
 <summary>
 Plus：这种大部分是在程序界面及多媒体功能上增强。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.预览版">
 <summary>
 Preview：软件作者为了满足那些对新版本很关注的人，发布的可以看到大部分功能的测试软件。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.企业版">
 <summary>
 Corporation：只针对企业发布的全功能版本，服务非常齐全。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.大客户企业版">
 <summary>
 Enterprise：只针对大型企业发布的全功能版本，价格比较昂贵，服务非常齐全。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.标准版">
 <summary>
 Standard：软件商推荐大家使用的版本，这种版本一般比较稳定，BUG少。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.迷你版">
 <summary>
 Mini：也叫精简版，只有最基本的功能，为那些想节省硬盘空间或者不追求华丽的人准备的。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.超值版">
 <summary>
 Premium：可以理解为对软件进行了最大限度的优化，属于优质版本或者高级版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.专业版">
 <summary>
 Professional：在原始版本基础上进行了修改或加强，使其比其原先版本存在更为广阔的功能和某一方面的独特优势。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.简易版">
 <summary>
 Express：有别于精简版，它是针对必要功能的定制开发，去掉不必要的功能，而不是简单的功能删减。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.豪华版">
 <summary>
 Deluxe：在原始版本基础上进行了修改或加强，主要体现在用户界面和扩展功能。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.已注册版">
 <summary>
 Registered：用户已通过软件注册渠道进行了注册，比如给软件提供商缴纳了相关费用，或是提交了注册码。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.多国语言版">
 <summary>
 Multilanguage：允许用户在多国语言间进行切换的版本。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.试用版">
 <summary>
 Trial：含有某些限制，如时间、功能，注册后也有可能变为正式版。
 </summary>
 <returns></returns>
</member>
<member name="P:DSAPI.语言和版本.次版本.最终批量版">
 <summary>
 RTM：这基本就是最终的版本，英文是 Release To Manufacture，意思是发布到生产商。通常，这是提供给OEM厂商进行批量刻盘或集成所用。
 </summary>
 <returns></returns>
</member>
<member name="T:DSAPI.键盘鼠标钩子">
 <summary>
全局钩子，特别注意：若要确保兼容所有Windows平台，请先确你的程序与平台相符，如编译为32位程序在32位操作系统使用，编译为64位程序在64位操作系统使用。
 </summary>
 <example>
 <para><img src="../CodesImages/键鼠勾子.png"></img></para>
 <para><a href="../Demos/DSAPI键盘鼠标勾子使用（含屏蔽按键）.rar">下载示例代码:DSAPI键盘鼠标勾子使用（含屏蔽按键）.rar</a></para>
 </example>
</member>
<member name="T:DSAPI.键盘鼠标钩子.组合键">
 <summary>
 用户同时按下的一个或多个键。如果设置了指定的组合键，当用户按下或放开相应的组合键时并触发“按下组合键”和“放开组合键”事件。
 </summary>
 <example>
 <para><img src="../CodesImages/QQ图片20200505094204.png"/></para>
 <para><a href="../Demos/组合键.rar">下载示例项目(VB.NET)</a></para>
 <code language="vb" source="e:\codesdemo\键盘鼠标钩子_组合键_VB.txt"></code>
 <code language="cs" source="e:\codesdemo\键盘鼠标钩子_组合键_CSharp.txt"></code>
 </example>
</member>
<member name="M:DSAPI.键盘鼠标钩子.组合键.op_Implicit(System.String)~DSAPI.键盘鼠标钩子.组合键">
 <summary>
 将指定的组合键表达式转为组合键对象，表达式格式为
 <br>名称:F1+F2+F3...</br>
 <br>名称:F1 + F2 + F3 ...</br>
 <br>名称=F1+F2+F3...</br>
 <br>名称=F1 + F2 + F3 ...</br>
 </summary>
 <param name="组合键表达式"></param>
 <returns></returns>
</member>
<member name="T:DSAPI.键盘鼠标钩子.HookProc">
 <summary>
 Hook Function
 </summary>
 <param name="nCode">HC_ACTION或HC_NOREMOVE</param>
 <param name="wParam">表按键Virtual Key</param>
 <param name="lParam">与WM_键按下同</param>
 <returns>若讯息要被处理传0反之传1</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.SetWindowsHookEx(DSAPI.键盘鼠标钩子.HookType,DSAPI.键盘鼠标钩子.HookProc,System.Int32,System.Int32)">
 <summary>
 本函数是用于启动Hook设置。
 </summary>
 <param name="idHook">Hook的类型，即处理的消息类型。</param>
 <param name="Lpfn">Hook子程（函数或过程）的地址指针。如果dwThreadId参数为0或是一个由别的进程创建的线程的标识，lpfn必须指向DLL中的Hook子程。 除此以外，lpfn可以指向当前进程的一段Hook子程代码</param>
 <param name="hMod">是应用程序实例的句柄，标识包含lpfn所指的子程的DLL。如果dwThreadId 标识当前进程创建的一个线程，而且子程代码位于当前进程，hMod必须为NULL。</param>
 <param name="dwThreadId">与安装Hook子程相关联的线程的标识符，如果为0，Hook子程与所有的线程关联。 </param>
 <returns>函数成功则返回Hook子程的句柄，失败返回NULL。</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.UnhookWindowsHookEx(System.Int32)">
 <summary>
 本函数是解除Hook之用。
 </summary>
 <param name="hHook">Hook函数的句柄。</param>
 <returns>函数成功则返回TRUE，失败返回FALSE。</returns>
</member>
<member name="M:DSAPI.键盘鼠标钩子.CallNextHookEx(System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 本函数的作用是将当前Hook链中的Hook信息传递给下一个Hook。
 </summary>
 <param name="hHook">当前Hook的句柄，一个应用程序接收这个句柄，作为先前调用SetWindowsHookEx函数的结果。</param>
 <param name="nCode">传递到当前Hook过程的Hook代码，下一个Hook过程使用这段代码去决定如何处理Hook信息。</param>
 <param name="wParam">传递给当前Hook过程的wParam值，它的具体含义是由当前Hook链中的相关Hook的类型决定的。</param>
 <param name="lParam">传递给当前Hook过程的lParam值，它的具体含义是由当前Hook链中的相关Hook的类型决定的。</param>
</member>
<member name="F:DSAPI.鼠标.CURSORINFO.flags">
 <summary>
 0=隐藏,1=显示
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
